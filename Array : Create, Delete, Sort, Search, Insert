#include<stdio.h>
#include<stdlib.h>
#include<string.h>

int main_menu()
{
	printf("\n Main_menu");
	printf("\n 1. Create array : ");
	printf("\n 2. Display element : ");
	printf("\n 3. Insert array : ");
	printf("\n 4. Delete element : ");
	printf("\n 5. Search element : ");
	printf("\n 6. Sort ascending : ");
	printf("\n 5. Sort descending : ");
	printf("\n 8. Exit : ");
}

int ins_menu()
{
	printf("\n Insert Menu \n");
	printf("\n 1. Insert at first position : ");
	printf("\n 2. Insert at desire position : ");
	printf("\n 3. Insert at last position : ");
}

int del_menu()
{
	printf("\n Delete Menu \n");
	printf("\n 1. Delete at first position : ");
	printf("\n 2. Delete at desire position : ");
	printf("\n 3. Delete at last position : ");
}

int cr_arr(int arr[], int n)
{
	while(1)
	{
		if(n < 0)
		{
			printf("\n Enter a valid value :");
			continue;
		}
		else
		break;
	}
	for(int i = 0; i < n; ++i)
	{
		printf("\n arr[%d] = \t",i);
		scanf("%d",&arr[i]);
	}
}

int dis_arr(int arr[], int n)
{
	for(int i = 0; i < n; ++i)
	{
		printf("\n arr[%d] = %5d",i,arr[i]);
	}
}

int ins_arr_frst(int arr[], int n)
{
	printf("\n Inserting data at 1st position arr[0] : \t");
	scanf("%d",&arr[0]);	
}

int ins_arr_des(int arr[], int n)
{
	int des;
	printf("\n select the desired position : \t");
	scanf("%d",&des);
	while(1)
	{
		if(des <= 1  && des >= n - 1)
		{
			printf("\n Enter the valid value : ");
			continue;
		}
		else
		break;
	}
	
	printf("\n Insert data at desired position : ");
	scanf("%d",&arr[des - 1]);
}

int ins_arr_lst(int arr[], int n)
{
	printf("\n Insert data at last position : ");
	scanf("%d",&arr[n - 1]);	
}

int del_arr_frst(int arr[], int n)
{
	char delf;
	printf("\n Delete data at 1st position arr[0] : \t y|n \t");
	scanf("\n %c",&delf);
	fflush(stdin);
	if(delf == 'y')
	{
		arr[0] = '\0';
	}
//	arr[0] = arr[1];
	if(arr[1] == '\0')
	arr[0] = arr[2];
}

int del_arr_des(int arr[], int n)
{	
	int des;
	printf("\n select the desired position : \t");
	scanf("%d",&des);
//	fflush(stdin);
	while(1)
	{
		if(des < 1  && des >= n - 1)
		{
			printf("\n Enter the valid value : ");
			continue;
		}
		else
		break;
	}
	
	char deld;
	printf("\n Delete data at desired position : \t y|n \t");
	scanf("%c",&deld);
	fflush(stdin);
	if(deld == 'y')
	{
		arr[des - 1] = '\0';
	}
//	arr[des - 1] = arr[des];
	if(arr[des] == '\0')
	arr[des - 1] = arr[des + 1];
}

int del_arr_lst(int arr[], int n)
{	
	char dell;
	printf("\n Delete data at last position : \t y|n \t");
	scanf("%c",&dell);
	fflush(stdin);
	if(dell == 'y')
	arr[n - 1] = '\0';
}

int srch_arr(int arr[], int n)
{
	int srch, flag = 0;
	printf("\n Enter the text u want to search : \t");
	scanf("%d",&srch);
	for(int i = 0; i < n; i++)
	{
		if(arr[i] == srch)
		{
			printf("\n Searched text is available");
			flag=1;
		}
	}
	if(flag==0)
		printf("\n Searched text not found!!!");
}

int srt_arr_asc(int arr[], int n)
{
	int i = 0, c;
	while(i < n)
	{
		int j = 0;
		while(j < n - 1)
		{
			if(arr[i] > arr[j + 1])
			{
				c = arr[j + 1];
				arr[j + 1] = arr[i];
				arr[i] = c;
			}
			j++;
		}
		i++;
	}
	return 0;
}

int exit()
{
	return(1);
}

int main()
{
	main_menu();
	
	int n;
	printf("\n Enter the size of the array : \t");
	scanf("%d",&n);
	int arr[n];
	
	int ch, i = 1, j = 0, k = 0, ch2, ch1;;
	while(i <= 8)
	{
		main_menu();
		printf("\n Enter the choice : ");
		scanf("%d",&ch);
		while(1)
		{	
			if(ch < 1 || ch > 8)
			{
				printf("\n Enter a valid choice : ");
				scanf("%d",&ch);
				continue;
			}
			else
			break;
		}
		switch(ch)
		{
			case 1:
			cr_arr(arr, n);
			break;
			case 2:
			dis_arr(arr, n);
			break;
			case 3:
			ins_menu();
			while(j < 4)
			{
				printf("\n Provide the choice : \t");
				scanf("%d",&ch1);
				while(1)
				{	
					if(ch1 < 1 || ch1 > 4)
					{
						printf("\n Enter a valid choice : ");
						scanf("%d",&ch1);
						continue;
					}
					else
					break;
				}
				switch(ch1)
				{
					case 1:
					ins_arr_frst(arr, n);
					break;
					case 2:
					ins_arr_des(arr, n);
					break;
					case 3:
					ins_arr_lst(arr, n);
					break;
					case 4:
					exit();
					break;
				}	
				j++;	
			}
			break;
			case 4:
			del_menu();
			while(k < 4)
			{
				printf("\n Provide the choice : \t");
				scanf("%d",&ch2);
				while(1)
				{	
					if(ch2 < 1 || ch2 > 4)
					{
						printf("\n Enter a valid choice : ");
						scanf("%d",&ch1);
						continue;
					}
					else
					break;
				}
				switch(ch2)
				{
					case 1:
					del_arr_frst(arr, n);
					break;
					case 2:
					del_arr_des(arr, n);
					break;
					case 3:
					del_arr_lst(arr, n);
					break;
					case 4: 
					exit();
					break;
				}	
				k++;	
			}
			break;
			case 5:
			srch_arr(arr, n);
			break;
			case 6:
			srt_arr_asc(arr, n);
			break;
		/*	case 7:
			srt_arr_dsc();
			break;*/
			case 8:
			exit();
			break;
		}
		i++;
	}
	
	
	
	return 0;
}
